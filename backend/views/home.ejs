<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Daily Expense Tracker</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
  <style>
    :root {
      --primary-color: #4361ee;
      --secondary-color: #3f37c9;
      --accent-color: #4895ef;
      --light-color: #f8f9fa;
      --dark-color: #212529;
      --success-color: #4cc9f0;
      --danger-color: #f72585;
      --warning-color: #f8961e;
    }
    
    body { 
      background-color: var(--light-color); 
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 0;
      min-height: 100vh;
    }
    
    .container {
      padding-bottom: 80px; /* Space for bottom nav */
    }
    
    .card {
      border-radius: 15px;
      box-shadow: 0 6px 12px rgba(0,0,0,0.1);
      margin-bottom: 20px;
      border: none;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    
    .card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 20px rgba(0,0,0,0.15);
    }
    
    .summary-card { 
      background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%); 
      color: white;
    }
    
    .menu-card { 
      background-color: white;
      padding: 20px;
    }
    
    .menu-item { 
      padding: 15px; 
      text-align: center; 
      cursor: pointer; 
      transition: all 0.3s ease;
      border-radius: 10px;
    }
    
    .menu-item:hover { 
      background-color: rgba(67, 97, 238, 0.1);
      transform: scale(1.05);
    }
    
    .menu-item i { 
      font-size: 24px; 
      margin-bottom: 10px; 
      color: var(--primary-color);
    }
    
    .nav-bar { 
      position: fixed; 
      bottom: 0; 
      width: 100%; 
      background-color: white; 
      box-shadow: 0 -2px 15px rgba(0,0,0,0.1);
      z-index: 1000;
    }
    
    .nav-item { 
      padding: 12px 0; 
      text-align: center;
      transition: all 0.3s ease;
    }
    
    .nav-item.active { 
      color: var(--primary-color);
      transform: translateY(-5px);
    }
    
    .nav-item i {
      font-size: 20px;
      margin-bottom: 5px;
    }
    
    .amount { 
      font-size: 24px; 
      font-weight: bold;
    }
    
    .form-control, .form-select {
      border-radius: 10px;
      padding: 10px 15px;
      border: 1px solid #e0e0e0;
    }
    
    .form-control:focus, .form-select:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.25);
    }
    
    .btn-primary {
      background-color: var(--primary-color);
      border: none;
      border-radius: 10px;
      padding: 10px 20px;
      transition: all 0.3s ease;
    }
    
    .btn-primary:hover {
      background-color: var(--secondary-color);
      transform: translateY(-2px);
    }
    
    .list-group-item {
      border-radius: 10px !important;
      margin-bottom: 10px;
      border: none !important;
      box-shadow: 0 2px 5px rgba(0,0,0,0.05);
      transition: all 0.3s ease;
    }
    
    .list-group-item:hover {
      transform: translateX(5px);
    }
    
    @media (max-width: 768px) {
      .card {
        margin-bottom: 15px;
      }
      
      .menu-item {
        padding: 10px;
      }
      
      .nav-item {
        padding: 8px 0;
        font-size: 14px;
      }
      
      .nav-item i {
        font-size: 18px;
      }
    }
  </style>
</head>
<body>
  <div class="container py-4">

    <!-- ✅ Logo and Title Section -->
    <div class="text-center mb-4">
      <img src="<%= '/images/logo.png' %>" alt="Logo" style="height: 50px;">
      <h4 class="mt-2">Daily Expense Tracker</h4>
    </div>

    <!-- Summary Cards -->
    <div class="row mb-4">
      <div class="col-md-4">
        <div class="card summary-card p-3">
          <h5>Today Earnings</h5>
          <div class="amount">$0.00</div>
        </div>
      </div>
      <div class="col-md-4">
        <div class="card summary-card p-3">
          <h5>Today Expenses</h5>
          <div class="amount">$0.00</div>
        </div>
      </div>
      <div class="col-md-4">
        <div class="card summary-card p-3">
          <h5>Balance</h5>
          <div class="amount">$0.00</div>
        </div>
      </div>
    </div>

    <!-- Quick Menu + History Section -->
    <div class="row">
      <div class="col-md-6">
        <div class="card menu-card p-3">
          <form id="expenseForm" class="mb-3">
            <div class="mb-3">
              <label class="form-label">Title</label>
              <input type="text" class="form-control" id="expenseTitle" required />
            </div>
            <div class="mb-3">
              <label class="form-label">Amount</label>
              <input type="number" class="form-control" id="expenseAmount" required />
            </div>
            <div class="mb-3">
              <label class="form-label">Category</label>
              <select class="form-select" id="expenseCategory" required>
                <option value="food">Food</option>
                <option value="transport">Transport</option>
                <option value="shopping">Shopping</option>
                <option value="bills">Bills</option>
                <option value="other">Other</option>
              </select>
            </div>
            <div class="mb-3">
              <label class="form-label">Type</label>
              <select class="form-select" id="expenseType" required>
                <option value="expense">Expense</option>
                <option value="income">Income</option>
              </select>
            </div>
            <button type="submit" class="btn btn-primary">Add</button>
          </form>
        </div>
      </div>

      <div class="col-md-6">
        <div class="card menu-card p-3 text-center">
          <h5 class="mt-3 mb-2">History</h5>
          <div id="expenseList" class="list-group"></div>
        </div>
      </div>
    </div>
  </div>

  <!-- Bottom Navigation -->
  <div class="nav-bar">
    <div class="row">
      <div class="col-3 nav-item active"><i class="fas fa-home"></i><div>Home</div></div>
      <div class="col-3 nav-item"><i class="fas fa-chart-pie"></i><div>Stats</div></div>
      <div class="col-3 nav-item"><i class="fas fa-user"></i><div>Profile</div></div>
      <div class="col-3 nav-item"><i class="fas fa-cog"></i><div>Settings</div></div>
    </div>
  </div>

  <script>
    document.querySelectorAll('.nav-item').forEach(item => {
      item.addEventListener('click', function (e) {
        e.preventDefault();
        document.querySelectorAll('.nav-item').forEach(i => i.classList.remove('active'));
        this.classList.add('active');
        
        // Handle navigation
        const text = this.querySelector('div').textContent.toLowerCase();
        if (text === 'home') {
          window.location.href = '/home';
        } else if (text === 'stats') {
          window.location.href = '/stats';
        } else if (text === 'profile') {
          window.location.href = '/profile';
        } else if (text === 'settings') {
          window.location.href = '/settings';
        }
      });
    });

    document.addEventListener('DOMContentLoaded', async () => {
      const summaryCards = document.querySelectorAll('.summary-card .amount');

      async function loadExpenses() {
        try {
          const response = await fetch('/api/expenses', {
            headers: {
              'Content-Type': 'application/json'
            },
            credentials: 'include'
          });
          
          if (!response.ok) {
            throw new Error('Failed to fetch expenses');
          }
          const expenses = await response.json();

          const expenseList = document.getElementById('expenseList');
          expenseList.innerHTML = '';

          let totalIncome = 0, totalExpense = 0;

          expenses.forEach(expense => {
            const isIncome = expense.amount > 0;
            const listItem = document.createElement('div');
            listItem.className = `list-group-item d-flex justify-content-between align-items-center ${isIncome ? 'list-group-item-success' : 'list-group-item-danger'}`;
            listItem.innerHTML = `
              <div>
                <strong>${expense.title}</strong><br/>
                <small class="text-muted">${expense.category} - ${new Date(expense.date).toLocaleDateString()}</small>
              </div>
              <div>
                <span>${isIncome ? '+' : '-'}₹${Math.abs(expense.amount)}</span>
                <button class="btn btn-sm btn-outline-danger ms-2" data-id="${expense._id}">
                  <i class="fas fa-trash"></i>
                </button>
              </div>
            `;
            expenseList.appendChild(listItem);

            if (isIncome) totalIncome += expense.amount;
            else totalExpense += Math.abs(expense.amount);
          });

          summaryCards[0].textContent = `₹${totalIncome.toFixed(2)}`;
          summaryCards[1].textContent = `₹${totalExpense.toFixed(2)}`;
          summaryCards[2].textContent = `₹${(totalIncome - totalExpense).toFixed(2)}`;

        } catch (error) {
          console.error('Error loading expenses:', error);
        }
      }

      document.getElementById('expenseForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const submitBtn = e.target.querySelector('button[type="submit"]');
        const originalBtnText = submitBtn.innerHTML;
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Adding...';

        try {
          const title = document.getElementById('expenseTitle').value;
          const amount = parseFloat(document.getElementById('expenseAmount').value);
          const category = document.getElementById('expenseCategory').value;
          const type = document.getElementById('expenseType').value;

          if (!title || isNaN(amount) || !category) {
            throw new Error('Please fill all fields correctly');
          }

          const expenseData = {
            title,
            amount: type === 'income' ? amount : -amount,
            category
          };

          const response = await fetch('/api/expenses', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            credentials: 'include',
            body: JSON.stringify(expenseData)
          });

          if (!response.ok) {
            const error = await response.json();
            throw new Error(error.error || 'Failed to add expense');
          }

          // Show success feedback
          const toast = document.createElement('div');
          toast.className = 'position-fixed bottom-0 end-0 p-3';
          toast.innerHTML = `
            <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
              <div class="toast-header bg-success text-white">
                <strong class="me-auto">Success</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
              </div>
              <div class="toast-body">
                Expense added successfully!
              </div>
            </div>
          `;
          document.body.appendChild(toast);
          setTimeout(() => toast.remove(), 3000);

          document.getElementById('expenseForm').reset();
          await loadExpenses();
        } catch (error) {
          // Show error feedback
          const toast = document.createElement('div');
          toast.className = 'position-fixed bottom-0 end-0 p-3';
          toast.innerHTML = `
            <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
              <div class="toast-header bg-danger text-white">
                <strong class="me-auto">Error</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
              </div>
              <div class="toast-body">
                ${error.message}
              </div>
            </div>
          `;
          document.body.appendChild(toast);
          setTimeout(() => toast.remove(), 3000);
          console.error('Error adding expense:', error);
        } finally {
          submitBtn.disabled = false;
          submitBtn.innerHTML = originalBtnText;
        }
      });

      document.getElementById('expenseList').addEventListener('click', async (e) => {
        if (e.target.closest('button')) {
          const id = e.target.closest('button').dataset.id;
          try {
          const response = await fetch(`/api/expenses/${id}`, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json'
            },
            credentials: 'include'
          });

            if (response.ok) {
              await loadExpenses();
            }
          } catch (error) {
            console.error('Error deleting expense:', error);
          }
        }
      });

      await loadExpenses();
    });
  </script>
</body>
</html>
